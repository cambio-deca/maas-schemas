/*

undefined
Schema for MODE_TAXI meta field

!!! AUTO GENERATED BY IOTSFJS REFRAIN FROM MANUAL EDITING !!!
See https://www.npmjs.com/package/io-ts-from-json-schema

*/

import * as t from 'io-ts';
import * as UnitsGeo_ from '../components/units-geo';
import * as Units_ from '../components/units';
import * as Common_ from '../components/common';
import * as SpaceDemand_ from '../components/spaceDemand';

export const schemaId = 'https://schemas.maas.global/core/modes/MODE_TAXI.json';

// MODE_TAXI
// The default export. More information at the top.
export type MODE_TAXI = t.Branded<
  {
    vehicleId?: string;
    noShowReportedByDriver?: boolean;
    vehicleLocation?: UnitsGeo_.Location;
    vehicleType?: string;
    vehicleDescription?: string;
    driver?: {
      phone?: string;
      name?: string;
      image?: Units_.Url;
      rating?: number;
    };
    pickupIdentificationCode?: string;
    dispatchOrderId?: string;
    eta?: Units_.Time;
    pickupAt?: Units_.Time;
    taxiCenter?: {
      image?: Units_.Url;
      name?: string;
      phone?: Common_.Phone;
    };
    messageToDriver?: string;
    spaceDemand?: SpaceDemand_.SpaceDemandObject;
  },
  MODE_TAXIBrand
>;
export type MODE_TAXIC = t.BrandC<
  t.PartialC<{
    vehicleId: t.StringC;
    noShowReportedByDriver: t.BooleanC;
    vehicleLocation: typeof UnitsGeo_.Location;
    vehicleType: t.StringC;
    vehicleDescription: t.StringC;
    driver: t.PartialC<{
      phone: t.StringC;
      name: t.StringC;
      image: typeof Units_.Url;
      rating: t.NumberC;
    }>;
    pickupIdentificationCode: t.StringC;
    dispatchOrderId: t.StringC;
    eta: typeof Units_.Time;
    pickupAt: typeof Units_.Time;
    taxiCenter: t.PartialC<{
      image: typeof Units_.Url;
      name: t.StringC;
      phone: typeof Common_.Phone;
    }>;
    messageToDriver: t.StringC;
    spaceDemand: typeof SpaceDemand_.SpaceDemandObject;
  }>,
  MODE_TAXIBrand
>;
export const MODE_TAXI: MODE_TAXIC = t.brand(
  t.partial({
    vehicleId: t.string,
    noShowReportedByDriver: t.boolean,
    vehicleLocation: UnitsGeo_.Location,
    vehicleType: t.string,
    vehicleDescription: t.string,
    driver: t.partial({
      phone: t.string,
      name: t.string,
      image: Units_.Url,
      rating: t.number,
    }),
    pickupIdentificationCode: t.string,
    dispatchOrderId: t.string,
    eta: Units_.Time,
    pickupAt: Units_.Time,
    taxiCenter: t.partial({
      image: Units_.Url,
      name: t.string,
      phone: Common_.Phone,
    }),
    messageToDriver: t.string,
    spaceDemand: SpaceDemand_.SpaceDemandObject,
  }),
  (
    x,
  ): x is t.Branded<
    {
      vehicleId?: string;
      noShowReportedByDriver?: boolean;
      vehicleLocation?: UnitsGeo_.Location;
      vehicleType?: string;
      vehicleDescription?: string;
      driver?: {
        phone?: string;
        name?: string;
        image?: Units_.Url;
        rating?: number;
      };
      pickupIdentificationCode?: string;
      dispatchOrderId?: string;
      eta?: Units_.Time;
      pickupAt?: Units_.Time;
      taxiCenter?: {
        image?: Units_.Url;
        name?: string;
        phone?: Common_.Phone;
      };
      messageToDriver?: string;
      spaceDemand?: SpaceDemand_.SpaceDemandObject;
    },
    MODE_TAXIBrand
  > => true,
  'MODE_TAXI',
);
export interface MODE_TAXIBrand {
  readonly MODE_TAXI: unique symbol;
}

export default MODE_TAXI;

// Success
