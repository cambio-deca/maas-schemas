/*

undefined
MaaS geocoding query request schema.

!!! AUTO GENERATED BY IOTSFJS REFRAIN FROM MANUAL EDITING !!!
See https://www.npmjs.com/package/io-ts-from-json-schema

*/

import * as t from 'io-ts';

import * as ApiCommon_16a4_ from '../../../core/components/api-common';
import * as I18n_b70d_ from '../../../core/components/i18n';
import * as Units_c404_ from '../../../core/components/units';
import * as UnitsGeo_3e31_ from '../../../core/components/units-geo';

export type Defined = {} | null;
export class DefinedType extends t.Type<Defined> {
  readonly _tag: 'DefinedType' = 'DefinedType';
  constructor() {
    super(
      'defined',
      (u): u is Defined => typeof u !== 'undefined',
      (u, c) => (this.is(u) ? t.success(u) : t.failure(u, c)),
      t.identity,
    );
  }
}
export type DefinedC = {} & DefinedType;
export const Defined: DefinedC = new DefinedType();

export const schemaId =
  'https://schemas.maas.global/maas-backend/geocoding/geocoding-reverse/request.json';

// Request
// The default export. More information at the top.
export type Request = t.Branded<
  {
    identityId?: Units_c404_.IdentityId;
    payload?: {
      lat?: UnitsGeo_3e31_.RelaxedLatitude;
      lon?: UnitsGeo_3e31_.RelaxedLongitude;
      count?: number;
      radius?: UnitsGeo_3e31_.Distance;
      locale?: I18n_b70d_.Locale & unknown;
    } & {
      lat: Defined;
      lon: Defined;
    };
    headers?: ApiCommon_16a4_.Headers;
  } & {
    payload: Defined;
  },
  RequestBrand
>;
export type RequestC = t.BrandC<
  t.IntersectionC<
    [
      t.PartialC<{
        identityId: typeof Units_c404_.IdentityId;
        payload: t.IntersectionC<
          [
            t.PartialC<{
              lat: typeof UnitsGeo_3e31_.RelaxedLatitude;
              lon: typeof UnitsGeo_3e31_.RelaxedLongitude;
              count: t.NumberC;
              radius: typeof UnitsGeo_3e31_.Distance;
              locale: t.IntersectionC<[typeof I18n_b70d_.Locale, t.UnknownC]>;
            }>,
            t.TypeC<{
              lat: typeof Defined;
              lon: typeof Defined;
            }>,
          ]
        >;
        headers: typeof ApiCommon_16a4_.Headers;
      }>,
      t.TypeC<{
        payload: typeof Defined;
      }>,
    ]
  >,
  RequestBrand
>;
export const Request: RequestC = t.brand(
  t.intersection([
    t.partial({
      identityId: Units_c404_.IdentityId,
      payload: t.intersection([
        t.partial({
          lat: UnitsGeo_3e31_.RelaxedLatitude,
          lon: UnitsGeo_3e31_.RelaxedLongitude,
          count: t.number,
          radius: UnitsGeo_3e31_.Distance,
          locale: t.intersection([I18n_b70d_.Locale, t.unknown]),
        }),
        t.type({
          lat: Defined,
          lon: Defined,
        }),
      ]),
      headers: ApiCommon_16a4_.Headers,
    }),
    t.type({
      payload: Defined,
    }),
  ]),
  (
    x,
  ): x is t.Branded<
    {
      identityId?: Units_c404_.IdentityId;
      payload?: {
        lat?: UnitsGeo_3e31_.RelaxedLatitude;
        lon?: UnitsGeo_3e31_.RelaxedLongitude;
        count?: number;
        radius?: UnitsGeo_3e31_.Distance;
        locale?: I18n_b70d_.Locale & unknown;
      } & {
        lat: Defined;
        lon: Defined;
      };
      headers?: ApiCommon_16a4_.Headers;
    } & {
      payload: Defined;
    },
    RequestBrand
  > => true,
  'Request',
);
export type RequestBrand = {
  readonly Request: unique symbol;
};

export default Request;

// Success
