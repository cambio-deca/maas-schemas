/*

undefined
MaaS customer virtual cards remove

!!! AUTO GENERATED BY IOTSFJS REFRAIN FROM MANUAL EDITING !!!
See https://www.npmjs.com/package/io-ts-from-json-schema

*/

import * as t from 'io-ts';

import * as ApiCommon_16a4_ from '../../../../core/components/api-common';
import * as Units_c404_ from '../../../../core/components/units';

export type Defined = {} | null;
export class DefinedType extends t.Type<Defined> {
  readonly _tag: 'DefinedType' = 'DefinedType';
  constructor() {
    super(
      'defined',
      (u): u is Defined => typeof u !== 'undefined',
      (u, c) => (this.is(u) ? t.success(u) : t.failure(u, c)),
      t.identity,
    );
  }
}
export type DefinedC = {} & DefinedType;
export const Defined: DefinedC = new DefinedType();

export const schemaId =
  'https://schemas.maas.global/maas-backend/customers/virtual-cards/remove/request.json';

// Request
// The default export. More information at the top.
export type Request = t.Branded<
  {
    customerId?: Units_c404_.IdentityId;
    headers?: ApiCommon_16a4_.Headers;
    identityId?: Units_c404_.IdentityId;
    virtualCardId?: number;
  } & {
    identityId: Defined;
    customerId: Defined;
    virtualCardId: Defined;
    headers: Defined;
  },
  RequestBrand
>;
export type RequestC = t.BrandC<
  t.IntersectionC<
    [
      t.PartialC<{
        customerId: typeof Units_c404_.IdentityId;
        headers: typeof ApiCommon_16a4_.Headers;
        identityId: typeof Units_c404_.IdentityId;
        virtualCardId: t.NumberC;
      }>,
      t.TypeC<{
        identityId: typeof Defined;
        customerId: typeof Defined;
        virtualCardId: typeof Defined;
        headers: typeof Defined;
      }>,
    ]
  >,
  RequestBrand
>;
export const Request: RequestC = t.brand(
  t.intersection([
    t.partial({
      customerId: Units_c404_.IdentityId,
      headers: ApiCommon_16a4_.Headers,
      identityId: Units_c404_.IdentityId,
      virtualCardId: t.number,
    }),
    t.type({
      identityId: Defined,
      customerId: Defined,
      virtualCardId: Defined,
      headers: Defined,
    }),
  ]),
  (
    x,
  ): x is t.Branded<
    {
      customerId?: Units_c404_.IdentityId;
      headers?: ApiCommon_16a4_.Headers;
      identityId?: Units_c404_.IdentityId;
      virtualCardId?: number;
    } & {
      identityId: Defined;
      customerId: Defined;
      virtualCardId: Defined;
      headers: Defined;
    },
    RequestBrand
  > => true,
  'Request',
);
export type RequestBrand = {
  readonly Request: unique symbol;
};

export default Request;

// Success
