/*

undefined
Update a pending verification personal document object

!!! AUTO GENERATED BY IOTSFJS REFRAIN FROM MANUAL EDITING !!!
See https://www.npmjs.com/package/io-ts-from-json-schema

*/

import * as t from 'io-ts';

import * as ApiCommon_16a4_ from '../../../../core/components/api-common';
import * as Units_c404_ from '../../../../core/components/units';
import * as PersonalDocument_9750_ from '../../../../core/personal-document';

export type NullBrand = {
  readonly Null: unique symbol;
};
export type NullC = t.BrandC<t.UnknownC, NullBrand>;
export const Null: NullC = t.brand(
  t.unknown,
  (n): n is t.Branded<unknown, NullBrand> => n === null,
  'Null',
);
export type Null = t.TypeOf<typeof Null>;

export type Defined = {} | null;
export class DefinedType extends t.Type<Defined> {
  readonly _tag: 'DefinedType' = 'DefinedType';
  constructor() {
    super(
      'defined',
      (u): u is Defined => typeof u !== 'undefined',
      (u, c) => (this.is(u) ? t.success(u) : t.failure(u, c)),
      t.identity,
    );
  }
}
export type DefinedC = {} & DefinedType;
export const Defined: DefinedC = new DefinedType();

export const schemaId =
  'https://schemas.maas.global/maas-backend/customers/personal-documents/update/request.json';

// Request
// The default export. More information at the top.
export type Request = t.Branded<
  {
    identityId?: Units_c404_.IdentityId;
    customerId?: Units_c404_.IdentityId;
    documentId?: Units_c404_.Uuid;
    payload?: {
      type?: PersonalDocument_9750_.DocumentType;
      documentNumber?: PersonalDocument_9750_.DocumentNumber;
      category?: PersonalDocument_9750_.Category;
      issuingCountry?: PersonalDocument_9750_.IssuingCountry;
      validFrom?: PersonalDocument_9750_.ValidFrom;
      validTo?: PersonalDocument_9750_.ValidTo;
      details?: PersonalDocument_9750_.Details;
      media?: PersonalDocument_9750_.Media;
      kycServiceId?: PersonalDocument_9750_.KycServiceId;
      firstName?: PersonalDocument_9750_.FirstName | Null;
      lastName?: PersonalDocument_9750_.LastName | Null;
    };
    headers?: ApiCommon_16a4_.Headers;
  } & {
    identityId: Defined;
    customerId: Defined;
    documentId: Defined;
    payload: Defined;
    headers: Defined;
  },
  RequestBrand
>;
export type RequestC = t.BrandC<
  t.IntersectionC<
    [
      t.PartialC<{
        identityId: typeof Units_c404_.IdentityId;
        customerId: typeof Units_c404_.IdentityId;
        documentId: typeof Units_c404_.Uuid;
        payload: t.PartialC<{
          type: typeof PersonalDocument_9750_.DocumentType;
          documentNumber: typeof PersonalDocument_9750_.DocumentNumber;
          category: typeof PersonalDocument_9750_.Category;
          issuingCountry: typeof PersonalDocument_9750_.IssuingCountry;
          validFrom: typeof PersonalDocument_9750_.ValidFrom;
          validTo: typeof PersonalDocument_9750_.ValidTo;
          details: typeof PersonalDocument_9750_.Details;
          media: typeof PersonalDocument_9750_.Media;
          kycServiceId: typeof PersonalDocument_9750_.KycServiceId;
          firstName: t.UnionC<[typeof PersonalDocument_9750_.FirstName, typeof Null]>;
          lastName: t.UnionC<[typeof PersonalDocument_9750_.LastName, typeof Null]>;
        }>;
        headers: typeof ApiCommon_16a4_.Headers;
      }>,
      t.TypeC<{
        identityId: typeof Defined;
        customerId: typeof Defined;
        documentId: typeof Defined;
        payload: typeof Defined;
        headers: typeof Defined;
      }>,
    ]
  >,
  RequestBrand
>;
export const Request: RequestC = t.brand(
  t.intersection([
    t.partial({
      identityId: Units_c404_.IdentityId,
      customerId: Units_c404_.IdentityId,
      documentId: Units_c404_.Uuid,
      payload: t.partial({
        type: PersonalDocument_9750_.DocumentType,
        documentNumber: PersonalDocument_9750_.DocumentNumber,
        category: PersonalDocument_9750_.Category,
        issuingCountry: PersonalDocument_9750_.IssuingCountry,
        validFrom: PersonalDocument_9750_.ValidFrom,
        validTo: PersonalDocument_9750_.ValidTo,
        details: PersonalDocument_9750_.Details,
        media: PersonalDocument_9750_.Media,
        kycServiceId: PersonalDocument_9750_.KycServiceId,
        firstName: t.union([PersonalDocument_9750_.FirstName, Null]),
        lastName: t.union([PersonalDocument_9750_.LastName, Null]),
      }),
      headers: ApiCommon_16a4_.Headers,
    }),
    t.type({
      identityId: Defined,
      customerId: Defined,
      documentId: Defined,
      payload: Defined,
      headers: Defined,
    }),
  ]),
  (
    x,
  ): x is t.Branded<
    {
      identityId?: Units_c404_.IdentityId;
      customerId?: Units_c404_.IdentityId;
      documentId?: Units_c404_.Uuid;
      payload?: {
        type?: PersonalDocument_9750_.DocumentType;
        documentNumber?: PersonalDocument_9750_.DocumentNumber;
        category?: PersonalDocument_9750_.Category;
        issuingCountry?: PersonalDocument_9750_.IssuingCountry;
        validFrom?: PersonalDocument_9750_.ValidFrom;
        validTo?: PersonalDocument_9750_.ValidTo;
        details?: PersonalDocument_9750_.Details;
        media?: PersonalDocument_9750_.Media;
        kycServiceId?: PersonalDocument_9750_.KycServiceId;
        firstName?: PersonalDocument_9750_.FirstName | Null;
        lastName?: PersonalDocument_9750_.LastName | Null;
      };
      headers?: ApiCommon_16a4_.Headers;
    } & {
      identityId: Defined;
      customerId: Defined;
      documentId: Defined;
      payload: Defined;
      headers: Defined;
    },
    RequestBrand
  > => true,
  'Request',
);
export type RequestBrand = {
  readonly Request: unique symbol;
};

export default Request;

// Success
