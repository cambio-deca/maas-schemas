/*

undefined
MaaS Invoice schema

!!! AUTO GENERATED BY IOTSFJS REFRAIN FROM MANUAL EDITING !!!
See https://www.npmjs.com/package/io-ts-from-json-schema

*/

import * as t from 'io-ts';

import * as Units_c404_ from '../../core/components/units';
import * as InvoiceLineItem_d18b_ from './invoiceLineItem';
import * as InvoiceUnits_a39a_ from './invoiceUnits';

export type Defined = {} | null;
export class DefinedType extends t.Type<Defined> {
  readonly _tag: 'DefinedType' = 'DefinedType';
  constructor() {
    super(
      'defined',
      (u): u is Defined => typeof u !== 'undefined',
      (u, c) => (this.is(u) ? t.success(u) : t.failure(u, c)),
      t.identity,
    );
  }
}
export type DefinedC = {} & DefinedType;
export const Defined: DefinedC = new DefinedType();

export const schemaId = 'https://schemas.maas.global/maas-backend/invoices/invoice.json';

// Invoice
// The purpose of this remains a mystery
export type Invoice = t.Branded<
  {
    id?: InvoiceUnits_a39a_.InvoiceId;
    customerId?: Units_c404_.IdentityId;
    bookingId?: Units_c404_.Uuid;
    lineItems?: Array<InvoiceLineItem_d18b_.InvoiceLineItem>;
  } & {
    id: Defined;
    customerId: Defined;
    bookingId: Defined;
    lineItems: Defined;
  },
  InvoiceBrand
>;
export type InvoiceC = t.BrandC<
  t.IntersectionC<
    [
      t.PartialC<{
        id: typeof InvoiceUnits_a39a_.InvoiceId;
        customerId: typeof Units_c404_.IdentityId;
        bookingId: typeof Units_c404_.Uuid;
        lineItems: t.ArrayC<typeof InvoiceLineItem_d18b_.InvoiceLineItem>;
      }>,
      t.TypeC<{
        id: typeof Defined;
        customerId: typeof Defined;
        bookingId: typeof Defined;
        lineItems: typeof Defined;
      }>,
    ]
  >,
  InvoiceBrand
>;
export const Invoice: InvoiceC = t.brand(
  t.intersection([
    t.partial({
      id: InvoiceUnits_a39a_.InvoiceId,
      customerId: Units_c404_.IdentityId,
      bookingId: Units_c404_.Uuid,
      lineItems: t.array(InvoiceLineItem_d18b_.InvoiceLineItem),
    }),
    t.type({
      id: Defined,
      customerId: Defined,
      bookingId: Defined,
      lineItems: Defined,
    }),
  ]),
  (
    x,
  ): x is t.Branded<
    {
      id?: InvoiceUnits_a39a_.InvoiceId;
      customerId?: Units_c404_.IdentityId;
      bookingId?: Units_c404_.Uuid;
      lineItems?: Array<InvoiceLineItem_d18b_.InvoiceLineItem>;
    } & {
      id: Defined;
      customerId: Defined;
      bookingId: Defined;
      lineItems: Defined;
    },
    InvoiceBrand
  > => true,
  'Invoice',
);
export type InvoiceBrand = {
  readonly Invoice: unique symbol;
};

// Success
