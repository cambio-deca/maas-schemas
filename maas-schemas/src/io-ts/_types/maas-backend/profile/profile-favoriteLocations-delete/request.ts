/*

undefined
Request schema for profile-favoriteLocations-delete

!!! AUTO GENERATED BY IOTSFJS REFRAIN FROM MANUAL EDITING !!!
See https://www.npmjs.com/package/io-ts-from-json-schema

*/

import * as t from 'io-ts';

import * as ApiCommon_16a4_ from '../../../core/components/api-common';
import * as Units_c404_ from '../../../core/components/units';

export type Defined = {} | null;
export class DefinedType extends t.Type<Defined> {
  readonly _tag: 'DefinedType' = 'DefinedType';
  constructor() {
    super(
      'defined',
      (u): u is Defined => typeof u !== 'undefined',
      (u, c) => (this.is(u) ? t.success(u) : t.failure(u, c)),
      t.identity,
    );
  }
}
export type DefinedC = {} & DefinedType;
export const Defined: DefinedC = new DefinedType();

export const schemaId =
  'https://schemas.maas.global/maas-backend/profile/profile-favoriteLocations-delete/request.json';

// Request
// The default export. More information at the top.
export type Request = t.Branded<
  {
    identityId?: Units_c404_.IdentityId;
    payload?: ({
      name?: string;
    } & Record<string, unknown>) & {
      name: Defined;
    };
    headers?: {
      Accept?: ApiCommon_16a4_.AcceptHeader;
      'X-Whim-User-Agent'?: ApiCommon_16a4_.UserAgentHeader;
    } & Record<string, unknown>;
  },
  RequestBrand
>;
export type RequestC = t.BrandC<
  t.PartialC<{
    identityId: typeof Units_c404_.IdentityId;
    payload: t.IntersectionC<
      [
        t.IntersectionC<
          [
            t.PartialC<{
              name: t.StringC;
            }>,
            t.RecordC<t.StringC, t.UnknownC>,
          ]
        >,
        t.TypeC<{
          name: typeof Defined;
        }>,
      ]
    >;
    headers: t.IntersectionC<
      [
        t.PartialC<{
          Accept: typeof ApiCommon_16a4_.AcceptHeader;
          'X-Whim-User-Agent': typeof ApiCommon_16a4_.UserAgentHeader;
        }>,
        t.RecordC<t.StringC, t.UnknownC>,
      ]
    >;
  }>,
  RequestBrand
>;
export const Request: RequestC = t.brand(
  t.partial({
    identityId: Units_c404_.IdentityId,
    payload: t.intersection([
      t.intersection([
        t.partial({
          name: t.string,
        }),
        t.record(t.string, t.unknown),
      ]),
      t.type({
        name: Defined,
      }),
    ]),
    headers: t.intersection([
      t.partial({
        Accept: ApiCommon_16a4_.AcceptHeader,
        'X-Whim-User-Agent': ApiCommon_16a4_.UserAgentHeader,
      }),
      t.record(t.string, t.unknown),
    ]),
  }),
  (
    x,
  ): x is t.Branded<
    {
      identityId?: Units_c404_.IdentityId;
      payload?: ({
        name?: string;
      } & Record<string, unknown>) & {
        name: Defined;
      };
      headers?: {
        Accept?: ApiCommon_16a4_.AcceptHeader;
        'X-Whim-User-Agent'?: ApiCommon_16a4_.UserAgentHeader;
      } & Record<string, unknown>;
    },
    RequestBrand
  > => true,
  'Request',
);
export type RequestBrand = {
  readonly Request: unique symbol;
};

export default Request;

// Success
