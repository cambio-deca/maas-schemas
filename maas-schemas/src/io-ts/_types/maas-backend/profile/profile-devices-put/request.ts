/*

undefined
Request schema for profile-active-plan-put

!!! AUTO GENERATED BY IOTSFJS REFRAIN FROM MANUAL EDITING !!!
See https://www.npmjs.com/package/io-ts-from-json-schema

*/

import * as t from 'io-ts';

import * as ApiCommon_16a4_ from '../../../core/components/api-common';
import * as Units_c404_ from '../../../core/components/units';

export type Defined = {} | null;
export class DefinedType extends t.Type<Defined> {
  readonly _tag: 'DefinedType' = 'DefinedType';
  constructor() {
    super(
      'defined',
      (u): u is Defined => typeof u !== 'undefined',
      (u, c) => (this.is(u) ? t.success(u) : t.failure(u, c)),
      t.identity,
    );
  }
}
export type DefinedC = {} & DefinedType;
export const Defined: DefinedC = new DefinedType();

export const schemaId =
  'https://schemas.maas.global/maas-backend/profile/profile-devices-put/request.json';

// Request
// The default export. More information at the top.
export type Request = t.Branded<
  {
    identityId?: Units_c404_.IdentityId;
    payload?: {
      devicePushToken?: string;
      deviceIdentifier?: Units_c404_.Uuid;
      deviceType?: string & ('iOS' | 'Android');
    } & {
      devicePushToken: Defined;
      deviceIdentifier: Defined;
      deviceType: Defined;
    };
    headers?: ApiCommon_16a4_.Headers;
  },
  RequestBrand
>;
export type RequestC = t.BrandC<
  t.PartialC<{
    identityId: typeof Units_c404_.IdentityId;
    payload: t.IntersectionC<
      [
        t.PartialC<{
          devicePushToken: t.StringC;
          deviceIdentifier: typeof Units_c404_.Uuid;
          deviceType: t.IntersectionC<
            [t.StringC, t.UnionC<[t.LiteralC<'iOS'>, t.LiteralC<'Android'>]>]
          >;
        }>,
        t.TypeC<{
          devicePushToken: typeof Defined;
          deviceIdentifier: typeof Defined;
          deviceType: typeof Defined;
        }>,
      ]
    >;
    headers: typeof ApiCommon_16a4_.Headers;
  }>,
  RequestBrand
>;
export const Request: RequestC = t.brand(
  t.partial({
    identityId: Units_c404_.IdentityId,
    payload: t.intersection([
      t.partial({
        devicePushToken: t.string,
        deviceIdentifier: Units_c404_.Uuid,
        deviceType: t.intersection([
          t.string,
          t.union([t.literal('iOS'), t.literal('Android')]),
        ]),
      }),
      t.type({
        devicePushToken: Defined,
        deviceIdentifier: Defined,
        deviceType: Defined,
      }),
    ]),
    headers: ApiCommon_16a4_.Headers,
  }),
  (
    x,
  ): x is t.Branded<
    {
      identityId?: Units_c404_.IdentityId;
      payload?: {
        devicePushToken?: string;
        deviceIdentifier?: Units_c404_.Uuid;
        deviceType?: string & ('iOS' | 'Android');
      } & {
        devicePushToken: Defined;
        deviceIdentifier: Defined;
        deviceType: Defined;
      };
      headers?: ApiCommon_16a4_.Headers;
    },
    RequestBrand
  > => true,
  'Request',
);
export type RequestBrand = {
  readonly Request: unique symbol;
};

export default Request;

// Success
