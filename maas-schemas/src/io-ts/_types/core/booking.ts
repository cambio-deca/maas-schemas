/*

undefined
The base booking object with all fields, to be inherited

!!! AUTO GENERATED BY IOTSFJS REFRAIN FROM MANUAL EDITING !!!
See https://www.npmjs.com/package/io-ts-from-json-schema

*/

import { NonEmptyArray } from 'fp-ts/lib/NonEmptyArray';
import * as t from 'io-ts';
import { nonEmptyArray } from 'io-ts-types/lib/nonEmptyArray';

import * as BookingMeta_c057_ from './booking-meta';
import * as Common_ffba_ from './components/common';
import * as Configurator_2e96_ from './components/configurator';
import * as Cost_250f_ from './components/cost';
import * as CustomerSelection_57c3_ from './components/customerSelection';
import * as Fare_a3ab_ from './components/fare';
import * as State_2db3_ from './components/state';
import * as StateLog_4daf_ from './components/state-log';
import * as Terms_bb95_ from './components/terms';
import * as Units_c404_ from './components/units';
import * as Customer_c745_ from './customer';
import * as Leg_1308_ from './leg';
import * as Product_d23e_ from './product';

export type NullBrand = {
  readonly Null: unique symbol;
};
export type NullC = t.BrandC<t.UnknownC, NullBrand>;
export const Null: NullC = t.brand(
  t.unknown,
  (n): n is t.Branded<unknown, NullBrand> => n === null,
  'Null',
);
export type Null = t.TypeOf<typeof Null>;

export type Defined = {} | null;
export class DefinedType extends t.Type<Defined> {
  readonly _tag: 'DefinedType' = 'DefinedType';
  constructor() {
    super(
      'defined',
      (u): u is Defined => typeof u !== 'undefined',
      (u, c) => (this.is(u) ? t.success(u) : t.failure(u, c)),
      t.identity,
    );
  }
}
export type DefinedC = {} & DefinedType;
export const Defined: DefinedC = new DefinedType();

export const schemaId = 'https://schemas.maas.global/core/booking.json';

// Id
// The purpose of this remains a mystery
export type Id = t.Branded<Units_c404_.Uuid, IdBrand>;
export type IdC = t.BrandC<typeof Units_c404_.Uuid, IdBrand>;
export const Id: IdC = t.brand(
  Units_c404_.Uuid,
  (x): x is t.Branded<Units_c404_.Uuid, IdBrand> => true,
  'Id',
);
export type IdBrand = {
  readonly Id: unique symbol;
};

// Fares
// The purpose of this remains a mystery
export type Fares = t.Branded<Array<Fare_a3ab_.Fare>, FaresBrand>;
export type FaresC = t.BrandC<t.ArrayC<typeof Fare_a3ab_.Fare>, FaresBrand>;
export const Fares: FaresC = t.brand(
  t.array(Fare_a3ab_.Fare),
  (x): x is t.Branded<Array<Fare_a3ab_.Fare>, FaresBrand> => true,
  'Fares',
);
export type FaresBrand = {
  readonly Fares: unique symbol;
};

// Cost
// The purpose of this remains a mystery
export type Cost = t.Branded<Cost_250f_.Cost, CostBrand>;
export type CostC = t.BrandC<typeof Cost_250f_.Cost, CostBrand>;
export const Cost: CostC = t.brand(
  Cost_250f_.Cost,
  (x): x is t.Branded<Cost_250f_.Cost, CostBrand> => true,
  'Cost',
);
export type CostBrand = {
  readonly Cost: unique symbol;
};

// Configurator
// The purpose of this remains a mystery
export type Configurator = t.Branded<Configurator_2e96_.Configurator, ConfiguratorBrand>;
export type ConfiguratorC = t.BrandC<
  typeof Configurator_2e96_.Configurator,
  ConfiguratorBrand
>;
export const Configurator: ConfiguratorC = t.brand(
  Configurator_2e96_.Configurator,
  (x): x is t.Branded<Configurator_2e96_.Configurator, ConfiguratorBrand> => true,
  'Configurator',
);
export type ConfiguratorBrand = {
  readonly Configurator: unique symbol;
};

// TspId
// The purpose of this remains a mystery
export type TspId = t.Branded<string, TspIdBrand>;
export type TspIdC = t.BrandC<t.StringC, TspIdBrand>;
export const TspId: TspIdC = t.brand(
  t.string,
  (x): x is t.Branded<string, TspIdBrand> =>
    (typeof x !== 'string' || x.length >= 1) &&
    (typeof x !== 'string' || x.length <= 256),
  'TspId',
);
export type TspIdBrand = {
  readonly TspId: unique symbol;
};

// Leg
// MaaS response may return any subset of legCore
export type Leg = t.Branded<
  {
    signature?: Common_ffba_.Signature;
    state?: Leg_1308_.State;
    from?: Leg_1308_.From;
    to?: Leg_1308_.To;
    startTime?: Leg_1308_.StartTime;
    endTime?: Leg_1308_.EndTime;
    mode?: Leg_1308_.Mode;
    stops?: Leg_1308_.Stops;
    departureDelay?: Leg_1308_.DepartureDelay;
    arrivalDelay?: Leg_1308_.ArrivalDelay;
    distance?: Leg_1308_.Distance;
    route?: Leg_1308_.Route;
    routeShortName?: Leg_1308_.RouteShortName;
    routeLongName?: Leg_1308_.RouteLongName;
    agencyId?: Leg_1308_.AgencyId;
    legGeometry?: Leg_1308_.LegGeometry;
    tspProduct?: Leg_1308_.TspProduct;
    productOption?: Leg_1308_.ProductOption;
  },
  LegBrand
>;
export type LegC = t.BrandC<
  t.PartialC<{
    signature: typeof Common_ffba_.Signature;
    state: typeof Leg_1308_.State;
    from: typeof Leg_1308_.From;
    to: typeof Leg_1308_.To;
    startTime: typeof Leg_1308_.StartTime;
    endTime: typeof Leg_1308_.EndTime;
    mode: typeof Leg_1308_.Mode;
    stops: typeof Leg_1308_.Stops;
    departureDelay: typeof Leg_1308_.DepartureDelay;
    arrivalDelay: typeof Leg_1308_.ArrivalDelay;
    distance: typeof Leg_1308_.Distance;
    route: typeof Leg_1308_.Route;
    routeShortName: typeof Leg_1308_.RouteShortName;
    routeLongName: typeof Leg_1308_.RouteLongName;
    agencyId: typeof Leg_1308_.AgencyId;
    legGeometry: typeof Leg_1308_.LegGeometry;
    tspProduct: typeof Leg_1308_.TspProduct;
    productOption: typeof Leg_1308_.ProductOption;
  }>,
  LegBrand
>;
export const Leg: LegC = t.brand(
  t.partial({
    signature: Common_ffba_.Signature,
    state: Leg_1308_.State,
    from: Leg_1308_.From,
    to: Leg_1308_.To,
    startTime: Leg_1308_.StartTime,
    endTime: Leg_1308_.EndTime,
    mode: Leg_1308_.Mode,
    stops: Leg_1308_.Stops,
    departureDelay: Leg_1308_.DepartureDelay,
    arrivalDelay: Leg_1308_.ArrivalDelay,
    distance: Leg_1308_.Distance,
    route: Leg_1308_.Route,
    routeShortName: Leg_1308_.RouteShortName,
    routeLongName: Leg_1308_.RouteLongName,
    agencyId: Leg_1308_.AgencyId,
    legGeometry: Leg_1308_.LegGeometry,
    tspProduct: Leg_1308_.TspProduct,
    productOption: Leg_1308_.ProductOption,
  }),
  (
    x,
  ): x is t.Branded<
    {
      signature?: Common_ffba_.Signature;
      state?: Leg_1308_.State;
      from?: Leg_1308_.From;
      to?: Leg_1308_.To;
      startTime?: Leg_1308_.StartTime;
      endTime?: Leg_1308_.EndTime;
      mode?: Leg_1308_.Mode;
      stops?: Leg_1308_.Stops;
      departureDelay?: Leg_1308_.DepartureDelay;
      arrivalDelay?: Leg_1308_.ArrivalDelay;
      distance?: Leg_1308_.Distance;
      route?: Leg_1308_.Route;
      routeShortName?: Leg_1308_.RouteShortName;
      routeLongName?: Leg_1308_.RouteLongName;
      agencyId?: Leg_1308_.AgencyId;
      legGeometry?: Leg_1308_.LegGeometry;
      tspProduct?: Leg_1308_.TspProduct;
      productOption?: Leg_1308_.ProductOption;
    },
    LegBrand
  > => true,
  'Leg',
);
export type LegBrand = {
  readonly Leg: unique symbol;
};

// Terms
// The purpose of this remains a mystery
export type Terms = t.Branded<Terms_bb95_.Terms, TermsBrand>;
export type TermsC = t.BrandC<typeof Terms_bb95_.Terms, TermsBrand>;
export const Terms: TermsC = t.brand(
  Terms_bb95_.Terms,
  (x): x is t.Branded<Terms_bb95_.Terms, TermsBrand> => true,
  'Terms',
);
export type TermsBrand = {
  readonly Terms: unique symbol;
};

// Token
// The validity token (such as booking ID, travel ticket etc.) that MaaS clients will display to validate the trip when starting the leg.
export type Token = t.Branded<
  {
    validityDuration?: {
      startTime?: Units_c404_.Time;
      endTime?: Units_c404_.Time;
    } & Record<string, unknown>;
    data?: Record<string, unknown> & Record<string, unknown>;
    meta?: Record<string, unknown> & Record<string, unknown>;
  } & Record<string, unknown>,
  TokenBrand
>;
export type TokenC = t.BrandC<
  t.IntersectionC<
    [
      t.PartialC<{
        validityDuration: t.IntersectionC<
          [
            t.PartialC<{
              startTime: typeof Units_c404_.Time;
              endTime: typeof Units_c404_.Time;
            }>,
            t.RecordC<t.StringC, t.UnknownC>,
          ]
        >;
        data: t.IntersectionC<[t.UnknownRecordC, t.RecordC<t.StringC, t.UnknownC>]>;
        meta: t.IntersectionC<[t.UnknownRecordC, t.RecordC<t.StringC, t.UnknownC>]>;
      }>,
      t.RecordC<t.StringC, t.UnknownC>,
    ]
  >,
  TokenBrand
>;
export const Token: TokenC = t.brand(
  t.intersection([
    t.partial({
      validityDuration: t.intersection([
        t.partial({
          startTime: Units_c404_.Time,
          endTime: Units_c404_.Time,
        }),
        t.record(t.string, t.unknown),
      ]),
      data: t.intersection([t.UnknownRecord, t.record(t.string, t.unknown)]),
      meta: t.intersection([t.UnknownRecord, t.record(t.string, t.unknown)]),
    }),
    t.record(t.string, t.unknown),
  ]),
  (
    x,
  ): x is t.Branded<
    {
      validityDuration?: {
        startTime?: Units_c404_.Time;
        endTime?: Units_c404_.Time;
      } & Record<string, unknown>;
      data?: Record<string, unknown> & Record<string, unknown>;
      meta?: Record<string, unknown> & Record<string, unknown>;
    } & Record<string, unknown>,
    TokenBrand
  > => true,
  'Token',
);
export type TokenBrand = {
  readonly Token: unique symbol;
};

// Booking
// The default export. More information at the top.
export type Booking = t.Branded<
  ({
    id?: Id;
    tspId?: TspId | Null;
    state?: State_2db3_.BookingState;
    stateLog?: StateLog_4daf_.StateLog;
    fares?: Fares;
    cost?: Cost | Null;
    leg?: Leg;
    token?: Token;
    meta?: BookingMeta_c057_.BookingMeta;
    terms?: Terms;
    unmodifiedTerms?: Terms;
    customer?: Customer_c745_.Customer &
      (Record<string, unknown> &
        Record<string, unknown> & {
          identityId: Defined;
        });
    product?: Product_d23e_.Product;
    signature?: Common_ffba_.Signature;
    configurator?: Configurator;
    customerSelection?: CustomerSelection_57c3_.CustomerSelection;
  } & Record<string, unknown>) & {
    id: Defined;
    state: Defined;
    leg: Defined;
    meta: Defined;
    terms: Defined;
    token: Defined;
    customer: Defined;
  },
  BookingBrand
>;
export type BookingC = t.BrandC<
  t.IntersectionC<
    [
      t.IntersectionC<
        [
          t.PartialC<{
            id: typeof Id;
            tspId: t.UnionC<[typeof TspId, typeof Null]>;
            state: typeof State_2db3_.BookingState;
            stateLog: typeof StateLog_4daf_.StateLog;
            fares: typeof Fares;
            cost: t.UnionC<[typeof Cost, typeof Null]>;
            leg: typeof Leg;
            token: typeof Token;
            meta: typeof BookingMeta_c057_.BookingMeta;
            terms: typeof Terms;
            unmodifiedTerms: typeof Terms;
            customer: t.IntersectionC<
              [
                typeof Customer_c745_.Customer,
                t.IntersectionC<
                  [
                    t.UnknownRecordC,
                    t.RecordC<t.StringC, t.UnknownC>,
                    t.TypeC<{
                      identityId: typeof Defined;
                    }>,
                  ]
                >,
              ]
            >;
            product: typeof Product_d23e_.Product;
            signature: typeof Common_ffba_.Signature;
            configurator: typeof Configurator;
            customerSelection: typeof CustomerSelection_57c3_.CustomerSelection;
          }>,
          t.RecordC<t.StringC, t.UnknownC>,
        ]
      >,
      t.TypeC<{
        id: typeof Defined;
        state: typeof Defined;
        leg: typeof Defined;
        meta: typeof Defined;
        terms: typeof Defined;
        token: typeof Defined;
        customer: typeof Defined;
      }>,
    ]
  >,
  BookingBrand
>;
export const Booking: BookingC = t.brand(
  t.intersection([
    t.intersection([
      t.partial({
        id: Id,
        tspId: t.union([TspId, Null]),
        state: State_2db3_.BookingState,
        stateLog: StateLog_4daf_.StateLog,
        fares: Fares,
        cost: t.union([Cost, Null]),
        leg: Leg,
        token: Token,
        meta: BookingMeta_c057_.BookingMeta,
        terms: Terms,
        unmodifiedTerms: Terms,
        customer: t.intersection([
          Customer_c745_.Customer,
          t.intersection([
            t.UnknownRecord,
            t.record(t.string, t.unknown),
            t.type({
              identityId: Defined,
            }),
          ]),
        ]),
        product: Product_d23e_.Product,
        signature: Common_ffba_.Signature,
        configurator: Configurator,
        customerSelection: CustomerSelection_57c3_.CustomerSelection,
      }),
      t.record(t.string, t.unknown),
    ]),
    t.type({
      id: Defined,
      state: Defined,
      leg: Defined,
      meta: Defined,
      terms: Defined,
      token: Defined,
      customer: Defined,
    }),
  ]),
  (
    x,
  ): x is t.Branded<
    ({
      id?: Id;
      tspId?: TspId | Null;
      state?: State_2db3_.BookingState;
      stateLog?: StateLog_4daf_.StateLog;
      fares?: Fares;
      cost?: Cost | Null;
      leg?: Leg;
      token?: Token;
      meta?: BookingMeta_c057_.BookingMeta;
      terms?: Terms;
      unmodifiedTerms?: Terms;
      customer?: Customer_c745_.Customer &
        (Record<string, unknown> &
          Record<string, unknown> & {
            identityId: Defined;
          });
      product?: Product_d23e_.Product;
      signature?: Common_ffba_.Signature;
      configurator?: Configurator;
      customerSelection?: CustomerSelection_57c3_.CustomerSelection;
    } & Record<string, unknown>) & {
      id: Defined;
      state: Defined;
      leg: Defined;
      meta: Defined;
      terms: Defined;
      token: Defined;
      customer: Defined;
    },
    BookingBrand
  > => true,
  'Booking',
);
export type BookingBrand = {
  readonly Booking: unique symbol;
};
/** require('io-ts-validator').validator(nonEmptyArray(Booking)).decodeSync(examplesBooking) // => examplesBooking */
export const examplesBooking: NonEmptyArray<Booking> = [
  {
    id: '12345678-ABCD-1234-ABCD-123456789ABC',
    state: 'EXPIRED',
    leg: {
      to: {
        lat: 60.184333,
        lon: 24.835972,
        name: 'Otaranta 6, Espoo',
        address:
          'streetName:Otaranta|streetNumber:6|city:Espoo|zipCode:02150|country:Suomi',
      },
      from: {
        lat: 60.168442,
        lon: 24.932205,
        name: 'Urho Kekkosen katu 1, Helsinki',
        address:
          'streetName:Urho Kekkosen katu|streetNumber:1|city:Helsinki|zipCode:00100|country:Suomi',
      },
      mode: 'TAXI',
      endTime: 1553092978009,
      agencyId: 'Valopilkku',
      startTime: 1553092978009,
      departureDelay: 123456,
    },
    token: { type: 'SECURITY_CODE', value: '12345' },
    terms: {
      reusable: false,
      validity: { endTime: 1553092978009, startTime: 1553092978009 },
      reconcilable: false,
    },
    meta: {
      raw: {
        data: { lat: 60.168442, lon: 24.932205, vehicle_id: '123' },
        order_id: 12345,
        timestamp: '2019-03-20T10:10:12+00:00',
        localized_description: 'Tilaus on valmis.',
      },
      MODE_TAXI: {
        vehicleId: '123',
        taxiCenter: { name: 'Lähitaksi', phone: '+3581007300' },
        vehicleType: 'any',
        vehicleLocation: { lat: 60.245254, lon: 24.989604 },
      },
      timestamp: 1553092978009,
      valopilkku: {
        prepaid: true,
        locations: [
          {
            type: 'pickup',
            address: { city: 'Helsinki', street_address: 'Urho Kekkosen katu 1' },
            contacts: [
              { name: 'John Doe', passenger_count: 1, provider_order_id: 'MaaS-12345' },
            ],
            coordinate: { lat: 60.168442, lon: 24.932205 },
            passenger_count: 1,
          },
          {
            type: 'destination',
            address: { city: 'Espoo', street_address: 'Otaranta 6' },
            drop_off: ['MaaS-12345'],
            coordinate: { lat: 60.184333, lon: 24.835972 },
            passenger_count: 1,
          },
        ],
        submitted: '2019-03-21T11:13:19.753Z',
      },
      description: 'Tilaus on valmis.',
    },
    created: '2019-03-20 10:10:12.123456',
    modified: '2019-03-20 18:30:12.123456',
    cost: { amount: 0, currency: 'EUR' },
    stateLog: [
      {
        reason: {},
        invalid: false,
        newState: 'PENDING',
        oldState: 'START',
        timestamp: 1553092178009,
      },
      {
        reason: {},
        invalid: false,
        newState: 'PAID',
        oldState: 'PENDING',
        timestamp: 1553092278009,
      },
      {
        reason: {},
        invalid: false,
        newState: 'RESERVED',
        oldState: 'PAID',
        timestamp: 1553092378009,
      },
      {
        reason: {},
        invalid: false,
        newState: 'CONFIRMED',
        oldState: 'RESERVED',
        timestamp: 1553092478009,
      },
      {
        reason: {},
        invalid: false,
        newState: 'ACTIVATED',
        oldState: 'CONFIRMED',
        timestamp: 1553092578009,
      },
      {
        reason: {},
        invalid: false,
        newState: 'EXPIRED',
        oldState: 'ACTIVATED',
        timestamp: 1553092678009,
      },
    ],
    productId: 'valopilkku-any',
    fares: [
      { type: 'charge', amount: 1000, currency: 'WMP', productionAmount: 1234 },
      { type: 'charge', amount: 1000, currency: 'EUR', productionAmount: 1200 },
    ],
    cancelling: false,
    customer: { identityId: 'eu-west-1:4828507e-683f-41bf-9d87-689808fbf958' },
  },
  {
    id: '6aba14e3-58f7-4e78-96c7-052784d60df1',
    tspId: '9902569160',
    state: 'EXPIRED',
    leg: {
      to: {
        lat: 60.31718,
        lon: 24.97031,
        name: 'Terminal 1, Car Rental Center, 01510, Vantaa',
      },
      from: {
        lat: 60.31718,
        lon: 24.97031,
        name: 'Terminal 1, Car Rental Center, 01510, Vantaa',
      },
      mode: 'CAR',
      endTime: 1635697800000,
      agencyId: 'Sixt',
      startTime: 1635571800000,
    },
    customer: {
      identityId: '7b5d347c-f6ef-4cac-9913-ce1f19e342b3',
      email: 'mamatha.muralidhara@maas.global',
      phone: '+35866610000204',
      locale: 'en',
      clientId: 'whim',
      lastName: 'Helsinki',
      opaqueId: '06d20c03afe3aad0956e76b2c543df070f9c3260fbbb47bc1802c6ff9d39db47',
      firstName: 'mamta',
    },
    token: { type: 'SECURITY_CODE', value: 'd22f4691e' },
    terms: {
      type: 'SIXT_RENTAL',
      reusable: false,
      validity: { endTime: 1635697800000, startTime: 1635571800000 },
      reconcilable: false,
    },
    meta: {
      Sixt: { cost: { taxes: 25.13, amount: 129.84, currency: 'EUR' } },
      whimCar: { isWhimCar: false },
      MODE_CAR: {
        car: {
          doors: [4, 4],
          luggage: [1, 1],
          passengers: 5,
          transmission: 'manual',
          classification: 'CCMR',
        },
        name: 'Kia Rio Man./Aut., Volkswagen Polo Man./Aut',
        image:
          'https://www.sixt.de/php/fleet/vehicleimage?grp=CCMR&liso=FI&uci=2240&png=1',
        description: '2/4 Door Compact, Manual transmission',
      },
      identifier:
        'A0J0KG3A01-8fv0DcTyAH7Sjg_hERFW71Sj2mNv4sZ0oi59SHERkDcbBpyoDQbbp01pk7fp53B3u92s5Ty8ohRU89dx1dd1uhBkp0GlZc1Lo9WklWbHxhedoY5LCxasyuw2A8uNtjgeIrQs7FnNKK4kJ3GcyyRfsDDFeFMYY6L0Fo2cZS0ZpNgRh2LfKX4ILvtemsjlAR1C7t8VwPAS_Sjq5voQI9wMTclHQVJhO-YvxFtLuFEbqcKSBR6P6-CvGiFEJLTn9hdcDaf0Gu1g7JmiJlNlxXbXV4BPOO0PDKTx68_AMHagP64B2AFYL7zQmDLwjM7BOOT1iIupVbZGRM4klLZ842POQ2QOWPJ6q-8CXAt0qw2sQTkUU7hdFRmoypqYAkgqAn0LcPvfWqZJYsX0pWISXNUkHrW6t3zvTRTJ695GqMVFR2pRDeJMnG2li3kA4a909FVJSmp--rYLLa5TIH_N3ZqzzoOZi-hU-xHPFp-KlIqre_pZ6TU2z5EJVZFzXa-g5bXMlzQEuoML8vAYQjh7FUrINmlYIrPY7O6xSvqxhujOZvlXfqnlVCtuoJIHFe4q_27zYY8',
    },
    created: 1635509843117,
    modified: 1635697812341,
    cost: { taxes: 25.13, amount: 129.84, currency: 'EUR' },
    stateLog: [
      {
        reason: { awsRequestId: '61444391-cd3e-471c-b2e5-b9e07f6a4639' },
        invalid: false,
        newState: 'PENDING',
        oldState: 'START',
        timestamp: 1635509844015,
      },
      {
        reason: { awsRequestId: null },
        invalid: false,
        newState: 'PAID',
        oldState: 'PENDING',
        timestamp: 1635509852206,
      },
      {
        reason: { awsRequestId: null },
        invalid: false,
        newState: 'RESERVED',
        oldState: 'PAID',
        timestamp: 1635509869083,
      },
      {
        reason: { awsRequestId: null },
        invalid: false,
        newState: 'ACTIVATED',
        oldState: 'RESERVED',
        timestamp: 1635571804610,
      },
      {
        reason: { awsRequestId: null },
        invalid: false,
        newState: 'EXPIRED',
        oldState: 'ACTIVATED',
        timestamp: 1635697813347,
      },
    ],
    fares: [
      {
        amount: 13813,
        currency: 'EUR',
        productionAmount: 13813,
        originalAmount: 13813,
        type: 'charge',
      },
    ],
    cancelling: false,
    configurator: {
      version: '2',
      estimatable: false,
      purchasable: true,
      validUntil: '2069-12-31T22:00:00.000Z',
      configurations: {},
      configuratorSelection: {},
      fares: [],
    },
    customerSelection: {},
    appInstanceId: 'c930c2a1-a1a4-3df3-b317-bde0ef1d78a3',
    executionName: null,
    autoPurchaseId: null,
    deviceId: 903,
    product: {
      id: 'sixt',
      name: 'SIXT_NAME',
      description: 'SIXT_DESC',
      meta: {},
      active: true,
      priority: 1,
      modes: ['CAR'],
      agencyId: 'Sixt',
      availability: {
        id: 6,
        regions: ['Finland'],
        geometry: {
          type: 'Polygon',
          coordinates: [
            [
              [28.93798828125, 69.7257219141874],
              [28.212890625, 69.937839021328],
              [27.97119140625, 70.1999940753466],
              [27.59765625, 70.1104847810593],
              [27.00439453125, 70.005566545745],
              [26.56494140625, 69.9754925361616],
              [26.1474609375, 69.8396219406746],
              [25.751953125, 69.6876184318562],
              [25.68603515625, 69.4112423569726],
              [25.5322265625, 69.1312712296365],
              [25.48828125, 68.9978015232897],
              [25.20263671875, 68.8951868894354],
              [24.8291015625, 68.7284134357551],
              [24.43359375, 68.7920938805366],
              [23.994140625, 68.8951868894354],
              [23.5107421875, 68.7761908375983],
              [23.0712890625, 68.7443506221147],
              [22.67578125, 68.8238658713315],
              [21.68701171875, 69.3415881705379],
              [21.20361328125, 69.3570863282203],
              [20.76416015625, 69.193799764619],
              [20.89599609375, 69.1234425501486],
              [20.58837890625, 69.1547404426926],
              [20.4345703125, 69.0920997669429],
              [20.4345703125, 69.0292793085448],
              [20.56640625, 69.0135460513232],
              [20.72021484375, 68.9741635834067],
              [20.80810546875, 68.8635170027268],
              [21.02783203125, 68.8079855561465],
              [21.29150390625, 68.696504871254],
              [21.64306640625, 68.5523507975906],
              [22.39013671875, 68.3424865640174],
              [22.763671875, 68.2937794427782],
              [23.0712890625, 68.0733047407902],
              [23.31298828125, 67.941650035336],
              [23.40087890625, 67.5757174170806],
              [23.3349609375, 67.4496565954186],
              [23.5546875, 67.3567853880607],
              [23.37890625, 67.1358293853195],
              [23.642578125, 66.843807381885],
              [23.5546875, 66.4079554797885],
              [23.5986328125, 66.1249623648797],
              [23.9501953125, 66.0001503565266],
              [24.169921875, 65.7486828949375],
              [20.7421875, 63.2336274123257],
              [19.9951171875, 60.3269477429984],
              [21.6650390625, 59.5565918856817],
              [27.685546875, 60.2616170828446],
              [27.960205078125, 60.5545786765552],
              [28.553466796875, 60.9197545323997],
              [28.707275390625, 60.9357696962293],
              [28.89404296875, 61.0954790195121],
              [29.4873046875, 61.3124515748382],
              [30.5859375, 62.0112181983376],
              [31.81640625, 62.9352348706047],
              [30.9375, 63.4995727856686],
              [30.16845703125, 63.7339088557292],
              [30.78369140625, 64.1393694420315],
              [30.12451171875, 64.4917250443547],
              [30.25634765625, 64.727262287778],
              [30.1025390625, 64.830253743883],
              [29.81689453125, 64.8769382322887],
              [29.7509765625, 64.997939200614],
              [30.05859375, 65.1183946883338],
              [30.0146484375, 65.2291018831922],
              [29.794921875, 65.2750935499542],
              [29.970703125, 65.6492162924837],
              [30.30029296875, 65.5948004262401],
              [30.05859375, 66.2668563143084],
              [29.24560546875, 66.9128340142486],
              [30.12451171875, 67.6384969400044],
              [29.937744140625, 67.8258363798566],
              [29.718017578125, 67.8548438166336],
              [29.42138671875, 68.0897089643431],
              [28.71826171875, 68.2205232557334],
              [28.509521484375, 68.5443150407769],
              [28.89404296875, 68.8714387233513],
              [28.795166015625, 68.8951868894354],
              [28.487548828125, 68.9110048456202],
              [28.9599609375, 69.0489300409776],
              [29.014892578125, 69.0881787599288],
              [28.916015625, 69.1430089901233],
              [29.058837890625, 69.2950269104607],
              [29.300537109375, 69.3957830884775],
              [29.42138671875, 69.4960701797534],
              [29.3115234375, 69.6265101680296],
              [29.15771484375, 69.7066787389554],
              [28.93798828125, 69.7257219141874],
            ],
          ],
        },
      },
      validity: null,
      reusable: false,
      tags: ['rental-car', 'whim-wheel-rental-car'],
      tspProductId: 'Sixt',
      icon: 'https://assets.development.maas.global/product-icons/sixt.png',
      fareFactors: { margin: 1.06382979 },
      vatId: 1,
      preAuthBuffer: null,
      allowFinishTrip: false,
      allowMultipleBookings: true,
      hidden: false,
      requireValidPaymentSource: false,
      vat: { id: 1, name: 'FI general', percentage: 24, symbol: 'VAT', vatFactor: 1.24 },
      whimCar: [
        {
          id: 3,
          name: 'EVERYDAY_ESTATE_CAR_NAME',
          description: 'EVERYDAY_ESTATE_CAR_DESC',
          tokenId: 'fi-whim-car-cwmr',
          dayPrice: {
            amount: 44,
            currency: 'EUR',
            dayRules: [
              {
                days: '*',
                currency: 'EUR',
                multiplier: 1.06382979,
                supportedAgency: ['Sixt-Whim-car'],
              },
              { days: '*', currency: 'EUR', multiplier: 1, supportedAgency: ['Sixt'] },
            ],
          },
          dayUpgradePrice: { 'fi-whim-car-ccmr': { amount: 10, currency: 'EUR' } },
          meta: {
            image:
              'https://assets.development.maas.global/product-images/fi-whim-car-cwmr.png',
            luggage: 5,
            passengers: '4 + 1',
            transmission: 'manual',
          },
          tags: ['whim-car'],
          class: ['cwmr', 'cwah'],
        },
        {
          id: 11,
          name: 'COMPACT_CAR_NAME',
          description: 'COMPACT_CAR_DESC',
          tokenId: 'fi-whim-weekend-car-ccmr',
          dayPrice: {
            amount: 49,
            currency: 'EUR',
            dayRules: [
              {
                days: 1,
                amount: 49,
                currency: 'EUR',
                multiplier: 1,
                supportedAgency: ['Sixt-Whim-car', 'Sixt'],
              },
              {
                days: '*',
                currency: 'EUR',
                multiplier: 1.06382979,
                supportedAgency: ['Sixt-Whim-car'],
              },
              { days: '*', currency: 'EUR', multiplier: 1, supportedAgency: ['Sixt'] },
            ],
          },
          dayUpgradePrice: {},
          meta: {
            image:
              'https://assets.development.maas.global/product-images/fi-weekend-car-ccmr.png',
            luggage: 3,
            passengers: '4',
            transmission: 'manual',
          },
          tags: ['fi-whim-weekend-car'],
          class: ['ccmr', 'edmv', 'ecav'],
        },
        {
          id: 12,
          name: 'EVERYDAY_ESTATE_CAR_NAME',
          description: 'EVERYDAY_ESTATE_CAR_DESC',
          tokenId: 'fi-whim-weekend-car-cwmr',
          dayPrice: {
            amount: 69,
            currency: 'EUR',
            dayRules: [
              {
                days: '*',
                currency: 'EUR',
                multiplier: 1.06382979,
                supportedAgency: ['Sixt-Whim-car'],
              },
              { days: '*', currency: 'EUR', multiplier: 1, supportedAgency: ['Sixt'] },
            ],
          },
          dayUpgradePrice: {
            'fi-whim-weekend-car-ccmr': { amount: 9.99, currency: 'EUR' },
          },
          meta: {
            image:
              'https://assets.development.maas.global/product-images/fi-whim-car-cwmr.png',
            luggage: 5,
            passengers: '4 + 1',
            transmission: 'manual',
          },
          tags: ['fi-whim-weekend-car'],
          class: ['cwmr', 'cwmv'],
        },
        {
          id: 13,
          name: 'LIFESTYLE_CAR_NAME',
          description: 'LIFESTYLE_CAR_DESC',
          tokenId: 'fi-whim-weekend-car-idar',
          dayPrice: {
            amount: 84,
            currency: 'EUR',
            dayRules: [
              {
                days: '*',
                currency: 'EUR',
                multiplier: 1.06382979,
                supportedAgency: ['Sixt-Whim-car'],
              },
              { days: '*', currency: 'EUR', multiplier: 1, supportedAgency: ['Sixt'] },
            ],
          },
          dayUpgradePrice: {
            'fi-whim-weekend-car-ccmr': { amount: 19.99, currency: 'EUR' },
            'fi-whim-weekend-car-ecmr': { amount: 19.99, currency: 'EUR' },
          },
          meta: {
            image:
              'https://assets.development.maas.global/product-images/fi-whim-car-idmr.png',
            luggage: 3,
            passengers: '4 + 1',
            transmission: 'automatic',
          },
          tags: ['fi-whim-weekend-car'],
          class: ['idar'],
        },
        {
          id: 101,
          name: 'COMPACT_CAR_NAME',
          description: 'COMPACT_CAR_DESC',
          tokenId: 'fi-whim-car-ccmr',
          dayPrice: {
            dayRules: [
              {
                days: 1,
                amount: 55,
                currency: 'EUR',
                multiplier: 1,
                supportedAgency: ['Sixt-Whim-car', 'Sixt'],
              },
              {
                days: '*',
                currency: 'EUR',
                multiplier: 1.06382979,
                supportedAgency: ['Sixt-Whim-car'],
              },
              { days: '*', currency: 'EUR', multiplier: 1, supportedAgency: ['Sixt'] },
            ],
          },
          dayUpgradePrice: {},
          meta: {
            image:
              'https://assets.development.maas.global/product-images/fi-whim-car-ccmr.png',
            luggage: 3,
            passengers: 4,
            transmission: 'manual',
          },
          tags: ['whim-car'],
          class: ['ccmr'],
        },
        {
          id: 102,
          name: 'PREMIUM_ESTATE_CAR_NAME',
          description: 'PREMIUM_ESTATE_CAR_DESC',
          tokenId: 'fi-whim-car-fdah',
          dayPrice: {
            dayRules: [
              {
                days: '*',
                currency: 'EUR',
                multiplier: 1.06382979,
                supportedAgency: ['Sixt-Whim-car'],
              },
              { days: '*', currency: 'EUR', multiplier: 1, supportedAgency: ['Sixt'] },
            ],
          },
          dayUpgradePrice: {
            'fi-whim-car-ccmr': { amount: 25, currency: 'EUR' },
            'fi-whim-car-cwmr': { amount: 20, currency: 'EUR' },
            'fi-whim-car-idar': { amount: 10, currency: 'EUR' },
            'fi-whim-car-iwmr': { amount: 10, currency: 'EUR' },
          },
          meta: {
            image:
              'https://assets.development.maas.global/product-images/fi-whim-car-fdah.png',
            luggage: 5,
            passengers: 5,
            transmission: 'manual',
          },
          tags: ['whim-car'],
          class: ['fdah'],
        },
        {
          id: 103,
          name: 'LIFESTYLE_CAR_NAME',
          description: 'LIFESTYLE_CAR_DESC',
          tokenId: 'fi-whim-car-idar',
          dayPrice: {
            dayRules: [
              {
                days: '*',
                currency: 'EUR',
                multiplier: 1.06382979,
                supportedAgency: ['Sixt-Whim-car'],
              },
              { days: '*', currency: 'EUR', multiplier: 1, supportedAgency: ['Sixt'] },
              { days: '*', currency: 'EUR', multiplier: 1, supportedAgency: ['Hertz'] },
            ],
          },
          dayUpgradePrice: {
            'fi-whim-car-ccmr': { amount: 20, currency: 'EUR' },
            'fi-whim-car-cwmr': { amount: 10, currency: 'EUR' },
            'fi-whim-car-iwmr': { amount: 10, currency: 'EUR' },
          },
          meta: {
            image:
              'https://assets.development.maas.global/product-images/fi-whim-car-idar.png',
            luggage: 3,
            passengers: '4 + 1',
            transmission: 'automatic',
          },
          tags: ['whim-car'],
          class: ['idar'],
        },
        {
          id: 104,
          name: 'SMALL_CAR_NAME',
          description: 'SMALL_CAR_DESC',
          tokenId: 'fi-whim-car-iwmr',
          dayPrice: {
            dayRules: [
              {
                days: '*',
                currency: 'EUR',
                multiplier: 1.06382979,
                supportedAgency: ['Sixt-Whim-car'],
              },
              { days: '*', currency: 'EUR', multiplier: 1, supportedAgency: ['Sixt'] },
            ],
          },
          dayUpgradePrice: {
            'fi-whim-car-ccmr': { amount: 20, currency: 'EUR' },
            'fi-whim-car-cwmr': { amount: 10, currency: 'EUR' },
          },
          meta: {
            image:
              'https://assets.development.maas.global/product-images/fi-whim-car-iwmr.png',
            luggage: 3,
            passengers: 4,
            transmission: 'manual',
          },
          tags: ['whim-car'],
          class: ['iwmr'],
        },
      ],
    },
    device: {
      _id: 903,
      _identityId: '7b5d347c-f6ef-4cac-9913-ce1f19e342b3',
      _active: false,
      _cooldownAt: '2021-10-29T10:51:43.101Z',
      _appInstanceId: 'c930c2a1-a1a4-3df3-b317-bde0ef1d78a3',
      _created: 1635504703207,
      _modified: 1635504703207,
    },
    purchasingAppInstanceId: 'c930c2a1-a1a4-3df3-b317-bde0ef1d78a3',
  },
  {
    id: '3cdc43e1-68bd-4ec7-8c1f-0a26b510814c',
    tspId: null,
    state: 'CANCELLED',
    leg: {
      to: { lat: 50.845655, lon: 4.356803999999999, name: 'Brussel-Centraal' },
      from: { lat: 51.199228, lon: 4.432219, name: 'Antwerpen-Berchem' },
      mode: 'TRAIN',
      endTime: 1636374960000,
      agencyId: 'NMBS',
      distance: 43538,
      startTime: 1636372740000,
    },
    customer: {
      email: 'mamatha.muralidhara@maas.global',
      phone: '+35866610000204',
      locale: 'en',
      clientId: 'whim',
      lastName: 'ios',
      opaqueId: '42f7ba1997a749dc4dcf7f65d9a3f8251fdd3215d3ee95b7a12cac408a30bf57',
      firstName: 'mamta',
      identityId: '170c691e-2411-4d56-a60f-64e6ddc3da45',
    },
    token: {},
    terms: {
      reusable: false,
      validity: { endTime: 1636426799000, startTime: 1636372740000 },
    },
    unmodifiedTerms: {
      reusable: true,
      validity: { endTime: 1636426799000, startTime: 1636372740000 },
    },
    meta: { foo: 'bar' },
    created: 1636370303239,
    modified: 1636370618830,
    cost: null,
    stateLog: [
      {
        reason: { awsRequestId: 'aea341d6-4209-47de-96ab-5329a62cc6de' },
        invalid: false,
        newState: 'PENDING',
        oldState: 'START',
        timestamp: 1636370304443,
      },
      {
        reason: { awsRequestId: null },
        invalid: false,
        newState: 'CANCELLED',
        oldState: 'PENDING',
        timestamp: 1636370618106,
      },
    ],
    productId: 'nmbs',
    fares: [
      {
        type: 'charge',
        amount: 750,
        currency: 'EUR',
        originalAmount: 750,
        productionAmount: 750,
      },
      { type: 'refund', amount: 750, currency: 'EUR' },
    ],
    cancelling: false,
    configurator: {
      fares: [
        {
          type: 'charge',
          amount: 750,
          currency: 'EUR',
          originalAmount: 750,
          productionAmount: 750,
        },
      ],
      version: '2',
      validUntil: 3155752800000,
      estimatable: false,
      purchasable: true,
      configurations: {
        outboundSingle: {
          name: 'Outbound Trip',
          type: 'oneOf',
          choices: [
            {
              id: '0',
              meta: {
                NMBS: {
                  diabolo: {},
                  isOver65: false,
                  isUnder26: false,
                  productId: '40000090',
                  journeyType: 'SingleTrip',
                  travelClass: 'SecondClass',
                  travelerType: 'Adult',
                  departureStationId: '108821121',
                  parentTicketNumber: '',
                  destinationStationId: '108813003',
                  isDiaboloFeeIncluded: false,
                },
                totalCost: { amount: '7.5', currency: 'EUR' },
                isFirstClass: false,
                isOpenReturn: false,
              },
              name: '2nd Class Single Ticket',
              fares: [
                {
                  type: 'charge',
                  amount: 750,
                  currency: 'EUR',
                  originalAmount: 750,
                  productionAmount: 750,
                },
              ],
              terms: { validity: { endTime: 1636426799000, startTime: 1636372740000 } },
              default: true,
              description: '2nd Class Single Ticket',
            },
          ],
          description: '',
        },
      },
      configuratorSelection: { outboundSingle: ['0'] },
    },
    customerSelection: { outboundSingle: ['0'] },
    appInstanceId: '9BFF78EB-FEE8-4554-947A-9E8B30FA90BE',
    executionName: null,
    autoPurchaseId: null,
    deviceId: 27988,
  },
] as unknown as NonEmptyArray<Booking>;

export default Booking;

// Success
